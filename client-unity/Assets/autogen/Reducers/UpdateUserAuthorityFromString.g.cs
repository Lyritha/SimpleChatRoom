// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit 4b41cf3d71aa85cd4e75c96cbb54324481ee0b27).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void UpdateUserAuthorityFromStringHandler(ReducerEventContext ctx, AuthorityLevel level, string identityHex);
        public event UpdateUserAuthorityFromStringHandler? OnUpdateUserAuthorityFromString;

        public void UpdateUserAuthorityFromString(AuthorityLevel level, string identityHex)
        {
            conn.InternalCallReducer(new Reducer.UpdateUserAuthorityFromString(level, identityHex), this.SetCallReducerFlags.UpdateUserAuthorityFromStringFlags);
        }

        public bool InvokeUpdateUserAuthorityFromString(ReducerEventContext ctx, Reducer.UpdateUserAuthorityFromString args)
        {
            if (OnUpdateUserAuthorityFromString == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnUpdateUserAuthorityFromString(
                ctx,
                args.Level,
                args.IdentityHex
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class UpdateUserAuthorityFromString : Reducer, IReducerArgs
        {
            [DataMember(Name = "level")]
            public AuthorityLevel Level;
            [DataMember(Name = "identityHex")]
            public string IdentityHex;

            public UpdateUserAuthorityFromString(
                AuthorityLevel Level,
                string IdentityHex
            )
            {
                this.Level = Level;
                this.IdentityHex = IdentityHex;
            }

            public UpdateUserAuthorityFromString()
            {
                this.IdentityHex = "";
            }

            string IReducerArgs.ReducerName => "UpdateUserAuthorityFromString";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags UpdateUserAuthorityFromStringFlags;
        public void UpdateUserAuthorityFromString(CallReducerFlags flags) => UpdateUserAuthorityFromStringFlags = flags;
    }
}
